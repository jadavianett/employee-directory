{"version":3,"sources":["components/Header.jsx","components/EmployeeRow.jsx","components/EmployeeTable.jsx","components/Search.jsx","App.js","index.js"],"names":["Header","class","EmployeeRow","props","scope","alt","name","src","picture","thumbnail","id","first","last","phone","style","width","email","EmployeeTable","state","employees","names","sortByLastName","employeeArray","sort","a","b","setState","sortedEmployees","margin","className","onClick","this","map","employee","Component","Search","search","results","handleInputChange","event","filter","tr","td","i","target","value","document","getElementById","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","display","handleSubmit","preventDefault","axios","get","then","res","data","onSubmit","type","onChange","placeholder","App","ReactDOM","render"],"mappings":"0NAiBeA,G,MAbA,WACb,OACE,sBAAKC,MAAM,cAAX,UACE,oDACA,uBACA,uJCaSC,EApBK,SAACC,GACnB,OAGE,aAFA,CAEA,kBACE,qBAAIF,MAAM,YAAV,UACE,oBAAIG,MAAM,MAAV,SACE,qBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,QAAQC,cAE3C,qBAAIC,GAAG,OAAP,UACGP,EAAMG,KAAKK,MADd,IACsBR,EAAMG,KAAKM,QAEjC,6BAAKT,EAAMU,QACX,oBAAIC,MAAO,CAAEC,MAAO,SAApB,SAAgCZ,EAAMa,c,OCuC/BC,E,4MAjDbC,MAAQ,CACNC,YACAC,MAAO,I,EAGTC,eAAiB,WACf,IAAIC,EAAgBH,EACpBG,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAElB,KAAKM,KAAOa,EAAEnB,KAAKM,MAAc,EACnCY,EAAElB,KAAKM,KAAOa,EAAEnB,KAAKM,KAAa,EAC/B,KAGT,EAAKc,SAAS,CACZC,gBAAiBL,K,uDAMnB,OACE,qBAAKR,MAAO,CAAEc,OAAQ,UAAtB,SACE,wBAAOC,UAAU,sBAAsBnB,GAAG,gBAA1C,UACE,gCACE,+BACE,oBAAIN,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAM0B,QAASC,KAAKV,eAA9B,SACE,0CAEF,oBAAIjB,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,yBAIH2B,KAAKb,MAAMC,UAAUa,KAAI,SAACC,GAAD,OACxB,cAAC,EAAD,CACE3B,KAAM2B,EAAS3B,KACfO,MAAOoB,EAASpB,MAChBG,MAAOiB,EAASjB,MAChBR,QAASyB,EAASzB,sB,GAxCJ0B,a,iBCwDbC,E,4MAtDbjB,MAAQ,CACNkB,OAAQ,GACRC,QAAS,I,EAQXC,kBAAoB,SAACC,GAEnB,IAAWC,EAAeC,EAAIC,EAAIC,EAKlC,IANA,EAAKjB,SAAS,CAAEU,OAAQG,EAAMK,OAAOC,QAGrCL,EADQM,SAASC,eAAe,UACjBF,MAAMG,cAErBP,EADQK,SAASC,eAAe,iBACrBE,qBAAqB,MAC3BN,EAAI,EAAGA,EAAIF,EAAGS,OAAQP,KACzBD,EAAKD,EAAGE,GAAGM,qBAAqB,MAAM,OAEzBP,EAAGS,aAAeT,EAAGU,WACnBJ,cAAcK,QAAQb,IAAW,EAC5CC,EAAGE,GAAG7B,MAAMwC,QAAU,GAEtBb,EAAGE,GAAG7B,MAAMwC,QAAU,S,EAO9BC,aAAe,SAAChB,GACdA,EAAMiB,kB,kEA5Ba,IAAD,OAClBC,IAAMC,IAAIvC,EAAUb,MAAMqD,MAAK,SAACC,GAC9B,EAAKlC,SAAS,CAAEW,QAASuB,EAAIC,KAAKxB,e,+BA+BpC,OACE,qBAAK3B,GAAG,aAAR,SACE,sBAAMoD,SAAU/B,KAAKwB,aAAc1B,UAAU,cAA7C,SACE,uBACEkC,KAAK,OACLC,SAAUjC,KAAKO,kBACf2B,YAAY,WACZvD,GAAG,SACHJ,KAAK,mB,GA9CI4B,aCcNgC,E,uKAVX,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAPUhC,a,MCAlBiC,IAASC,OAAO,cAAC,EAAD,IAAStB,SAASC,eAAe,U","file":"static/js/main.85024833.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\n// renders the header\nconst Header = () => {\n  return (\n    <div class=\"page-header\">\n      <h1>Employee Directory</h1>\n      <br />\n      <h5>\n        Click on name property to sort employees alphabetically or use the\n        search bar to search for a specific employee!\n      </h5>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst EmployeeRow = (props) => {\n  return (\n    // renders the individual table rows for each employee on the employees.json file\n    // takes in props\n    <tbody>\n      <tr class=\"table-row\">\n        <th scope=\"row\">\n          <img alt={props.name} src={props.picture.thumbnail} />\n        </th>\n        <td id=\"name\">\n          {props.name.first} {props.name.last}\n        </td>\n        <td>{props.phone}</td>\n        <td style={{ width: \"100px\" }}>{props.email}</td>\n      </tr>\n    </tbody>\n  );\n};\n\n// exports the component so that it can be imported into employeetable.jsx\nexport default EmployeeRow;\n","import React, { Component } from \"react\";\nimport EmployeeRow from \"./EmployeeRow\";\nimport employees from \"../employees.json\";\n\nclass EmployeeTable extends Component {\n  state = {\n    employees,\n    names: [],\n  };\n  // sorts the list of employees by last name\n  sortByLastName = () => {\n    let employeeArray = employees;\n    employeeArray.sort((a, b) => {\n      if (a.name.last < b.name.last) return -1;\n      if (a.name.last > b.name.last) return 1;\n      return 0;\n    });\n    // sets the employee array to a new sortedemployees element\n    this.setState({\n      sortedEmployees: employeeArray,\n    });\n  };\n\n  // renders the table\n  render() {\n    return (\n      <div style={{ margin: \"0 auto\" }}>\n        <table className=\"table table-striped\" id=\"employeeTable\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Photo</th>\n              <th scope=\"col\" onClick={this.sortByLastName}>\n                <span>Name</span>\n              </th>\n              <th scope=\"col\">Phone Number</th>\n              <th scope=\"col\">E-Mail</th>\n            </tr>\n          </thead>\n          {/* // maps over the employee array to render a row for each employee */}\n          {this.state.employees.map((employee) => (\n            <EmployeeRow\n              name={employee.name}\n              phone={employee.phone}\n              email={employee.email}\n              picture={employee.picture}\n            />\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\n// exports the component so that can be imported into the app.js\nexport default EmployeeTable;\n","import React, { Component } from \"react\";\nimport employees from \"../employees.json\";\nimport axios from \"axios\";\n\n// state sets search to an empty string\nclass Search extends Component {\n  state = {\n    search: \"\",\n    results: [],\n  };\n  componentDidMount() {\n    axios.get(employees.name).then((res) => {\n      this.setState({ results: res.data.results });\n    });\n  }\n  // is called when when the input field is changed\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value });\n    let input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"search\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"employeeTable\");\n    tr = table.getElementsByTagName(\"tr\");\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  };\n  \n  // is called when the input form is submitted \n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  //renders the search bar \n  render() {\n    return (\n      <div id=\"search-bar\">\n        <form onSubmit={this.handleSubmit} className=\"text-center\">\n          <input\n            type=\"text\"\n            onChange={this.handleInputChange}\n            placeholder=\"Search..\"\n            id=\"search\"\n            name=\"search\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\n// exports the component so that it can be imported into app.js\nexport default Search;\n","import Header from \"./components/Header\";\nimport React, { Component } from \"react\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport Search from \"./components/Search\";\n\n\nclass App extends Component {\n  // renders the header, search bar, and employee row components \n  render() {\n    return (\n      <div>\n        <Header />\n        <Search/>\n        <EmployeeTable/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}